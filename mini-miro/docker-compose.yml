version: '3.8'

services:
  # All-in-one Mini-Miro application
  mini-miro:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mini-miro-app
    restart: unless-stopped
    ports:
      - "3003:3003"
    volumes:
      # Data persistence
      - mini-miro-data:/app/data
      # Logs persistence
      - mini-miro-logs:/app/logs
      # Backup directory
      - ./backups:/app/backups
    environment:
      # Application settings
      - NODE_ENV=production
      - PORT=3003
      - DB_PATH=/app/data/minimiro.db
      - LOG_LEVEL=info
      
      # Performance settings
      - NODE_OPTIONS=--max-old-space-size=512
      
      # Feature flags
      - ENABLE_HEALTH_CHECK=true
      - ENABLE_METRICS=true
    networks:
      - mini-miro-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "mini-miro.service=main"
      - "mini-miro.version=1.0.0"
      - "traefik.enable=true"
      - "traefik.http.routers.mini-miro.rule=Host(`localhost`)"
      - "traefik.http.services.mini-miro.loadbalancer.server.port=3003"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backup service (runs daily)
  backup:
    image: alpine:latest
    container_name: mini-miro-backup
    restart: unless-stopped
    volumes:
      - mini-miro-data:/data:ro
      - ./backups:/backups
    environment:
      - BACKUP_RETENTION_DAYS=7
    command: |
      sh -c '
        echo "üì¶ Mini-Miro Backup Service Started"
        while true; do
          DATE=$$(date +%Y%m%d_%H%M%S)
          echo "üíæ Creating backup at $$DATE"
          
          # Create backup
          if [ -f "/data/minimiro.db" ]; then
            cp /data/minimiro.db /backups/minimiro-$$DATE.db
            echo "‚úÖ Backup created: minimiro-$$DATE.db"
          else
            echo "‚ö†Ô∏è No database file found to backup"
          fi
          
          # Cleanup old backups
          find /backups -name "minimiro-*.db" -mtime +$${BACKUP_RETENTION_DAYS:-7} -delete
          echo "üßπ Old backups cleaned up"
          
          # Wait 24 hours
          sleep 86400
        done
      '
    networks:
      - mini-miro-network
    depends_on:
      - mini-miro
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Optional: Reverse proxy with SSL (uncomment if needed)
  # nginx:
  #   image: nginx:alpine
  #   container_name: mini-miro-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #     - ./ssl:/etc/ssl/certs
  #   depends_on:
  #     - mini-miro
  #   networks:
  #     - mini-miro-network

  # Optional: Monitoring with Watchtower (auto-updates)
  # watchtower:
  #   image: containrrr/watchtower
  #   container_name: mini-miro-watchtower
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - WATCHTOWER_POLL_INTERVAL=86400  # 24 hours
  #     - WATCHTOWER_CLEANUP=true
  #   command: mini-miro-app

# Named volumes for data persistence
volumes:
  mini-miro-data:
    driver: local
    name: mini-miro-data
    driver_opts:
      type: none
      device: ${PWD}/data
      o: bind
  
  mini-miro-logs:
    driver: local
    name: mini-miro-logs

# Custom network for service isolation
networks:
  mini-miro-network:
    driver: bridge
    name: mini-miro-net
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16
    driver_opts:
      com.docker.network.bridge.name: mini-miro-br